{
  "openapi": "3.0.1",
  "info": {
    "title": "Movie Recommendation Engine API",
    "description": "API for a movie recommendation engine that suggests movies based on user preferences using collaborative filtering.",
    "version": "1.0.0"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },

  "paths": {
    "/users/": {
      "post": {
        "description": "Register a new user ",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "email": { "type": "string" },
                  "favoriteGenres": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "ACTION",
                        "ADVENTURE",
                        "COMEDY",
                        "DRAMA",
                        "HORROR",
                        "SCIFI",
                        "ROMANCE",
                        "DOCUMENTARY",
                        "ANIMATION",
                        "FANTASY",
                        "THRILLER",
                        "MYSTERY",
                        "MUSICAL",
                        "BIOGRAPHY",
                        "HISTORICAL",
                        "SPORT",
                        "WAR",
                        "WESTERN",
                        "FAMILY",
                        "CRIME",
                        "NOIR",
                        "SUPERHERO"
                      ]
                    }
                  },
                  "password": { "type": "string" },
                  "confirmPassword": { "type": "string" }
                },
                "required": ["username", "email", "password", "genders"],
                "example": {
                  "username": "john_doe",
                  "email": "john.doe@example.com",
                  "favoriteGenres": ["ACTION","ADVENTURE","COMEDY","DRAMA","HORROR","SCIFI","ROMANCE","DOCUMENTARY","ANIMATION","FANTASY","THRILLER","MYSTERY","MUSICAL","BIOGRAPHY","HISTORICAL","SPORT","WAR","WESTERN","FAMILY","CRIME","NOIR","SUPERHERO"],
                  "password": "strongpassword",
                  "confirmPassword": "strongpassword"
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User created successfully" },
          "400": { "description": "Invalid data or missing fields" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/users/login": {
      "post": {
        "description": "Route to log in a user",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "password": { "type": "string" }
                },
                "example": {
                  "username": "john_doe",
                  "password": "strongpassword"
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Authenticated user" },
          "400": { "description": "Invalid password" },
          "404": { "description": "User not found" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/users":{
      "put": {
        "description": "Endpoit to update user",
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "email": { "type": "string" },
                  "favoriteGenres": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "ACTION",
                        "ADVENTURE",
                        "COMEDY",
                        "DRAMA",
                        "HORROR",
                        "SCIFI",
                        "ROMANCE",
                        "DOCUMENTARY",
                        "ANIMATION",
                        "FANTASY",
                        "THRILLER",
                        "MYSTERY",
                        "MUSICAL",
                        "BIOGRAPHY",
                        "HISTORICAL",
                        "SPORT",
                        "WAR",
                        "WESTERN",
                        "FAMILY",
                        "CRIME",
                        "NOIR",
                        "SUPERHERO"
                      ]
                    }
                  }
                },
                "required": ["username", "email", "genders"],
                "example": {
                  "username": "john_doe",
                  "email": "john.doe@example.com",
                  "favoriteGenres": ["ACTION","ADVENTURE","COMEDY","DRAMA","HORROR","SCIFI","ROMANCE","DOCUMENTARY","ANIMATION","FANTASY","THRILLER","MYSTERY","MUSICAL","BIOGRAPHY","HISTORICAL","SPORT","WAR","WESTERN","FAMILY","CRIME","NOIR","SUPERHERO"]
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "User updated" },
          "400": { "description": "Invalid data or missing fields" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "get":{
        "description": "Endpoit to get user",
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "User found" },
          "404": { "description": "User not found" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "delete":{
        "description": "Endpoit to delete user",
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "User deleted" },
          "404": { "description": "User not found" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/movies": {
        "post": {
          "description": "Route to create a movie",
          "tags": ["Movie"],
          "security": [{ "bearerAuth": [] }],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": { "type": "string" },
                    "description": { "type": "string" },
                    "release_year": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "genders": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": ["ACTION", "COMEDY", "DRAMA"]
                      },
                      "description": "At least one genre must be selected"
                    }
                  },
                  "required": ["title", "description", "release_year", "genders"],
                  "example": {
                    "title": "Inception",
                    "description": "A skilled thief is offered a chance to erase his past crimes by planting an idea in someone's mind.",
                    "release_year": "2010-07-16T00:00:00Z",
                    "genders": ["ACTION", "DRAMA"]
                  }
                }
              }
            }
          },
          "responses": {
            "201": { "description": "Movie created " },
            "400": { "description": "Invalid data or missing fields" },
            "401": { "description": "Token not provided" },
            "500": { "description": "Internal Server Error" }
          }
        },
       "get": {
        "description": "Route to get all movies",
        "tags": ["Movie"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Movies found" },
          "401": { "description": "Token not provided" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/movies/{id}":{
      "get": {
        "description": "Route to get a specific movie",
        "tags": ["Movie"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the movie to get",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Movie found" },
          "401": { "description": "Token not provided" },
          "404": { "description": "Movie not found" },
          "500": { "description": "Internal Server Error" }
        }
      }
      ,
      "delete": {
        "description": "Route to delete a specific movie",
        "tags": ["Movie"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the movie to delete",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Movie deleted " },
          "401": { "description": "Token not provided" },
          "404": { "description": "Movie not found" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/movies/likemovie/{id}":{
      "post": {
        "description": "Route to like a specific movie",
        "tags": ["Movie"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the movie to like",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Movie liked" },
          "401": { "description": "Token not provided" },
          "404": { "description": "Movie not found" },
          "500": { "description": "Internal Server Error" }
        }
      }

    },
   "/recommendations/{userId}": {
  "get": {
    "description": "Route to get movie recommendations for a specific user",
    "tags": ["Recommendations"],
    "security": [{ "bearerAuth": [] }],
    "parameters": [
      {
        "name": "userId",
        "in": "path",
        "required": true,
        "description": "ID of the user to get recommendations for",
        "schema": { "type": "string" }
      }
    ],
    "responses": {
      "200": {
        "description": "Movie recommendations found",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "movieId": { "type": "string" },
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "release_year": { "type": "string", "format": "date" }
                }
              }
            }
          }
        }
      },
      "401": { "description": "Token not provided" },
      "404": { "description": "User not found" },
      "500": { "description": "Internal Server Error" }
    }
  }
}


    
  }
}
